css/style.css
bootstrap icons - folder
table - folder

html
key message
key message edit
risk table
index

models.py
views.py
urls.py
****************************************


'''
 pip install mysql-connector-python
'''

db setings

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

db setings

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

CREATE TABLE key_message(
 message_id VARCHAR(50) NOT NULL,
 user VARCHAR(50) NOT NULL,
 message LONGTEXT NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
*******************************************************************************************

Date - Modified - 17-10-23
index
key_message
key_edit_message
risk_table

*******************************************************************************************
html

index
risk_table
risk_edit
key_program
key_message

models.py
urls.py
views.py

db_connection
config

--------------- 22/10/23
CREATE TABLE risk_table(
 risk_summary VARCHAR(200) NOT NULL,
 risk_area VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 consequence VARCHAR(200) NOT NULL,
 mitigations VARCHAR(200) NOT NULL,
 eta DATE,
 age VARCHAR(200) NOT NULL,
 trigger_date DATE,
 risk_initiated DATE,
 impact VARCHAR(200) NOT NULL,
 risk_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE issues_table(
 issues_summary VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 eta DATE,
 age VARCHAR(200) NOT NULL,
 trigger_date DATE,
 issues_initiated DATE,
 severity VARCHAR(200) NOT NULL,
 issues_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


-------------------- 24/10/23

Added model for key metric table and backend changes also completed

**********************************************************************
html - risk table,risk_edit,key_program,key_program_edit
urls.py, views.py


-------------------- 25/10/2023




====================== 31/10/2023

updated db_connection, models, forms, urls, views

home.html

*****************************
index.html
risk_table.html
key_program.html



**************************** 07/11/23

details.html
admin
models
urls
views


**************************** 08/11/23

create table in db;

CREATE TABLE details(
 details_id VARCHAR(50) NOT NULL,
 user VARCHAR(50) NOT NULL,
 message LONGTEXT NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

views.py
config
db_connection

######################################### 8/11/23
views.py
urls.py
index.html
details.html
details_edit_message.html

***************************************** 13/11/23
views.py
urls.py
models.py
admin.py
db_connection.py
config.py

schedule.html
index.html

risk_table.html
key_program.html


CREATE TABLE schedule_table(
 milestone VARCHAR(200) NOT NULL,
 por_commit DATE,
 por_trend DATE,
 status VARCHAR(50) NOT NULL,
 comments VARCHAR(200) NOT NULL,
 schedule_id VARCHAR(50) NOT NULL,
 user VARCHAR(50) NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 sort_value int NOT NULL AUTO_INCREMENT,
 PRIMARY KEY (sort_value)
);

************************************************ 14/11/23
views.py
urls.py
schedule_edit.html
schedule.html

********************************************** 26/11/23
index.html
views
models
risk.html
key_program.html

********************************************** 28/11/23
index.html
risk.html
key_program.html
schedule.html

********************************************** 03/12/23
risk_table.html
key_program.html
views.py

New files added Path
D:\intelproject\intel_app\static\intel_app\css\bootstrap-toggle.min.css
D:\intelproject\intel_app\static\intel_app\js\bootstrap-toggle.min.js

views
urls
models
db_connction
admin

CREATE TABLE risk_table(
 problem_statement VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 message VARCHAR(200) NOT NULL,
 eta DATE,
 risk DATE,
 severity VARCHAR(200) NOT NULL,
 impact VARCHAR(200) NOT NULL,
 risk_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 user VARCHAR(100) NOT NULL,
 display VARCHAR(20) NOT NULL
);

************************************************** 04/12/23
risk_table
key_program
index
models
schedule

************************************************** 05/12/23
links
key_program
index
models
urls
views

************************************************** 07/12/23
links
risk_table
schedule
key_program
models
urls
views

CREATE TABLE links_table(
 links_url LONGTEXT NOT NULL,
 comments_links VARCHAR(200) NOT NULL,
 links_id VARCHAR(50) NOT NULL,
 project VARCHAR(20) NOT NULL,
 user VARCHAR(50) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



echo "from django.contrib.auth import get_user_model; CustomUser = get_user_model();  CustomUser.objects.create_superuser('test_user', '', 'Admin#1234')" | python manage.py shell










# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticroot')
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

#MEDIA
MEDIA_ROOT_DIR = 'media'
MEDIA_ROOT = os.path.join(BASE_DIR, MEDIA_ROOT_DIR)
MEDIA_URL = '/media/'

#TinyMce
TINYMCE_JS_ROOT = os.path.join(STATIC_URL, "tinymce")
TINYMCE_JS_URL = os.path.join(TINYMCE_JS_ROOT, "tinymce.min.js")

TINYMCE_DEFAULT_CONFIG = {
    'plugins': "table,paste,searchreplace",
    'theme': "advanced",
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 10,
}
TINYMCE_SPELLCHECKER = False
TINYMCE_COMPRESSOR = False



manifest.yml

---
applications:
- name: HelloDjango
  memory: 128MB
  disk_quota: 256MB
  random-route: true
  buildpack: python_buildpack
  command: bash ./run.sh
  declared-services:
    hellodjango:
      label: postgres
      plan: shared-nr
  services:
    - hellodjango




run.sh

 #!/bin/bash
 if [ -z "$VCAP_APP_PORT" ];
 then SERVER_PORT=80;
 else SERVER_PORT="$VCAP_APP_PORT";
 fi
 echo port is $SERVER_PORT

 echo "make migrations"
 python manage.py makemigrations

 echo "migrate"
 python manage.py migrate

 echo "from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@whizzy.io', 'password')" | python manage.py shell

 echo [$0] Starting Django Server...
 python manage.py runserver 0.0.0.0:$SERVER_PORT --noreload



CREATE TABLE users(
 username VARCHAR(50) NOT NULL,
 password VARCHAR(255) NOT NULL,
 project JSON,
 admin_status BOOLEAN,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE project_data(
 project VARCHAR(50) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE key_program_metric_table(
 metric MEDIUMTEXT NOT NULL,
 fv_target MEDIUMTEXT NOT NULL,
 current_week_actual MEDIUMTEXT NOT NULL,
 current_week_plan MEDIUMTEXT NOT NULL,
 status VARCHAR(50) NOT NULL,
 comments VARCHAR(250) NOT NULL,
 metric_id VARCHAR(250) NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 user VARCHAR(50) NOT NULL
);


CREATE TABLE bbox(
 category VARCHAR(200) NOT NULL,
 process MEDIUMTEXT NOT NULL,
 die_area MEDIUMTEXT NOT NULL,
 config MEDIUMTEXT NOT NULL,
 pv_freq MEDIUMTEXT NOT NULL,
 perf_target MEDIUMTEXT NOT NULL,
 cdyn MEDIUMTEXT NOT NULL,
 schedule_bbox MEDIUMTEXT NOT NULL,
 bbox_id VARCHAR(250) NOT NULL,
 project VARCHAR(20) NOT NULL,
 user VARCHAR(50) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE TABLE users(
 username VARCHAR(50) NOT NULL,
 password VARCHAR(255) NOT NULL,
 project JSON,
 admin_status BOOLEAN,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

pip install bcrypt

--------------- 23/01/24
CREATE TABLE risk_table(
 display VARCHAR(20) NOT NULL,
 risk_summary VARCHAR(200) NOT NULL,
 risk_area VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 consequence VARCHAR(200) NOT NULL,
 mitigations VARCHAR(200) NOT NULL,
 eta DATE,
 trigger_date DATE,
 risk_initiated DATE,
 impact VARCHAR(200) NOT NULL,
 risk_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE issues_table(
 issues_summary VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 eta DATE,
 trigger_date DATE,
 issues_initiated DATE,
 severity VARCHAR(200) NOT NULL,
 issues_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

urls.py
views.py
config.py
db_connection.py

user_create.html
schedule.html
risk_table.html
links.html
key_program.html
issues.html
index.html
bbox.html

******************************************************************
schedule.html
risk_table.html
links.html
key_program.html
issues.html
index.html
bbox.html

new file
css tail-select
js tail-select

******************************************************************
CREATE TABLE bbox(
 category VARCHAR(200) NOT NULL,
 process MEDIUMTEXT NOT NULL,
 die_area MEDIUMTEXT NOT NULL,
 config MEDIUMTEXT NOT NULL,
 pv_freq MEDIUMTEXT NOT NULL,
 perf_target MEDIUMTEXT NOT NULL,
 cdyn MEDIUMTEXT NOT NULL,
 schedule_bbox MEDIUMTEXT NOT NULL,
 bbox_id VARCHAR(250) NOT NULL,
 project VARCHAR(20) NOT NULL,
 user VARCHAR(50) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

bbox
key_program - delete removed
views (bbox)
db connection - db

********************************************
CREATE TABLE risk_table(
 display VARCHAR(20) NOT NULL,
 risk_summary VARCHAR(200) NOT NULL,
 risk_area VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 consequence VARCHAR(200) NOT NULL,
 mitigations VARCHAR(200) NOT NULL,
 eta VARCHAR(200) NOT NULL,
 trigger_date DATE,
 risk_initiated DATE,
 impact VARCHAR(200) NOT NULL,
 risk_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

views.py
risk_table.html
db_connection.py



=================================== new changes 24-feb =====================================

CREATE TABLE schedule_table(
 display VARCHAR(20) NOT NULL,
 milestone VARCHAR(200) NOT NULL,
 por_commit DATE,
 por_trend DATE,
 status VARCHAR(50) NOT NULL,
 comments VARCHAR(200) NOT NULL,
 schedule_id VARCHAR(50) NOT NULL,
 user VARCHAR(50) NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 deleted BOOLEAN,
 deleted_by VARCHAR(200) NOT NULL,
 deleted_on date,
 sort_value int NOT NULL AUTO_INCREMENT,
 PRIMARY KEY (sort_value)
);

CREATE TABLE issues_table(
 display VARCHAR(20) NOT NULL,
 issues_summary VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 eta VARCHAR(200) NOT NULL,
 trigger_date DATE,
 issues_initiated DATE,
 severity VARCHAR(200) NOT NULL,
 issues_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 deleted BOOLEAN,
 deleted_by VARCHAR(200) NOT NULL,
 deleted_on date,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE bbox(
 display VARCHAR(20) NOT NULL,
 category VARCHAR(200) NOT NULL,
 process MEDIUMTEXT NOT NULL,
 die_area MEDIUMTEXT NOT NULL,
 config MEDIUMTEXT NOT NULL,
 pv_freq MEDIUMTEXT NOT NULL,
 perf_target MEDIUMTEXT NOT NULL,
 cdyn MEDIUMTEXT NOT NULL,
 schedule_bbox MEDIUMTEXT NOT NULL,
 bbox_id VARCHAR(250) NOT NULL,
 project VARCHAR(20) NOT NULL,
 user VARCHAR(50) NOT NULL,
 deleted BOOLEAN,
 deleted_by VARCHAR(200) NOT NULL,
 deleted_on date,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE links_table(
 display VARCHAR(20) NOT NULL,
 links_url LONGTEXT NOT NULL,
 comments_links VARCHAR(200) NOT NULL,
 links_id VARCHAR(50) NOT NULL,
 project VARCHAR(20) NOT NULL,
 user VARCHAR(50) NOT NULL,
 deleted BOOLEAN,
 deleted_by VARCHAR(200) NOT NULL,
 deleted_on date,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE risk_table(
 display VARCHAR(20) NOT NULL,
 risk_summary VARCHAR(200) NOT NULL,
 risk_area VARCHAR(200) NOT NULL,
 status VARCHAR(50) NOT NULL,
 owner VARCHAR(100) NOT NULL,
 consequence VARCHAR(200) NOT NULL,
 mitigations VARCHAR(200) NOT NULL,
 eta VARCHAR(200) NOT NULL,
 trigger_date DATE,
 risk_initiated DATE,
 impact VARCHAR(200) NOT NULL,
 risk_id VARCHAR(200) NOT NULL,
 project VARCHAR(100) NOT NULL,
 user VARCHAR(100) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE key_program_metric_table(
 display VARCHAR(20) NOT NULL,
 metric MEDIUMTEXT NOT NULL,
 fv_target MEDIUMTEXT NOT NULL,
 current_week_actual MEDIUMTEXT NOT NULL,
 current_week_plan MEDIUMTEXT NOT NULL,
 status VARCHAR(50) NOT NULL,
 comments VARCHAR(250) NOT NULL,
 metric_id VARCHAR(250) NOT NULL,
 project VARCHAR(20) NOT NULL,
 ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
 user VARCHAR(50) NOT NULL
);

view
urls
db_connection

bbox
issues
key_program
links
risk_table
schedule